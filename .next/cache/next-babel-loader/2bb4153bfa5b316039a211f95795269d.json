{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\111\\\\Desktop\\\\E-edu\\\\edu-sys\\\\components\\\\loginform.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Typography, Checkbox, Radio, Alert } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport Router from \"next/router\";\nimport API from \"../lib/api\";\nimport User from \"../lib/user\"; // property\n\nconst {\n  Title\n} = Typography;\nconst student = \"student\",\n      teacher = \"teacher\",\n      manager = \"manager\"; //end\n//style for components\n// why &&&?\n\nconst StyleButton = styled(Button)`\n    &&& {\n        width: 100%;\n    }\n`;\nconst StyleTitle = styled(Title)`\n    &&&{\n        text-align:center;\n    }\n`; // style componet end\n\n_c = StyleTitle;\n\nfunction LoginForm(props) {\n  _s();\n\n  // why []?\n  const [form] = Form.useForm();\n  const {\n    0: loginFaiMsg,\n    1: SetloginFailMsg\n  } = useState();\n\n  const login = async (loginRequest, loginType) => {\n    let res;\n\n    if (loginType === student) {\n      res = await API.studentLogin(loginRequest);\n    } else if (loginType === teacher) {\n      res = await API.teacherLogin(loginRequest);\n    } else {\n      res = await API.managerLogin(loginRequest);\n    }\n\n    let success = API.CheckAPIResult(res);\n\n    if (success) {\n      const {\n        token,\n        login_type\n      } = res.data[\"datas\"];\n      User.saveTokenp(token);\n      User.saveLoginType(login_type);\n      Router.push(\"./index\");\n    } else {\n      showloginError(res[\"msg\"]);\n    }\n  };\n\n  const showloginError = msg => {\n    SetloginFailMsg(msg);\n  };\n\n  const onFinsh = loginRequest => {\n    const {\n      loginType\n    } = loginRequest;\n    login(loginRequest, loginType);\n  };\n\n  const onLoginTypeChange = e => {\n    const selectedLoginType = e.target.value;\n    form.resetFields();\n    form.setFieldsValue({\n      loginType: selectedLoginType\n    });\n    SetloginFailMsg();\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    name: \"login\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinsh,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(StyleTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Education Online System\"), __jsx(Form.Item, {\n    name: \"loginType\",\n    initialValue: \"student\",\n    rules: [{\n      required: true,\n      message: \"please choose a login type!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(Radio.Group, {\n    onChange: onLoginTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Radio.Button, {\n    value: student,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Student\"), __jsx(Radio.Button, {\n    value: teacher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Teacher\"), __jsx(Radio.Button, {\n    value: manager,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Manager\"))), __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: \"Please input your email.\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 36\n      }\n    }),\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"Please input your password.\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }),\n    type: \"password\",\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Item, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Remember me\")), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, __jsx(StyledButton, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Login\"))), loginFailMsg && __jsx(Alert, {\n    message: \"Login Failed\",\n    description: loginFaiMsg,\n    type: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }));\n}\n\n_s(LoginForm, \"L6+LZIXQa6AUzsbMltEunXxwtYI=\", false, function () {\n  return [Form.useForm];\n});\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyleTitle\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/111/Desktop/E-edu/edu-sys/components/loginform.js"],"names":["React","useState","Form","Input","Button","Typography","Checkbox","Radio","Alert","UserOutlined","LockOutlined","styled","Router","API","User","Title","student","teacher","manager","StyleButton","StyleTitle","LoginForm","props","form","useForm","loginFaiMsg","SetloginFailMsg","login","loginRequest","loginType","res","studentLogin","teacherLogin","managerLogin","success","CheckAPIResult","token","login_type","data","saveTokenp","saveLoginType","push","showloginError","msg","onFinsh","onLoginTypeChange","e","selectedLoginType","target","value","resetFields","setFieldsValue","remember","required","message","loginFailMsg"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form, Input, Button, Typography, Checkbox, Radio, Alert} from \"antd\";\r\nimport {UserOutlined, LockOutlined} from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport Router from \"next/router\";\r\nimport API from \"../lib/api\";\r\nimport User from \"../lib/user\";\r\n\r\n// property\r\nconst {Title} = Typography;\r\nconst student = \"student\", teacher = \"teacher\", manager = \"manager\";\r\n//end\r\n\r\n//style for components\r\n// why &&&?\r\nconst StyleButton = styled(Button)`\r\n    &&& {\r\n        width: 100%;\r\n    }\r\n`;\r\nconst StyleTitle = styled(Title)`\r\n    &&&{\r\n        text-align:center;\r\n    }\r\n`;\r\n\r\n// style componet end\r\nfunction LoginForm(props){\r\n    // why []?\r\n    const [form] = Form.useForm();\r\n    const [loginFaiMsg, SetloginFailMsg] = useState();\r\n\r\n    const login = async (loginRequest, loginType) =>{\r\n        let res;\r\n        if(loginType === student){\r\n            res = await API.studentLogin(loginRequest);\r\n        }else if(loginType === teacher){\r\n            res = await API.teacherLogin(loginRequest);\r\n        }else{\r\n            res = await API.managerLogin(loginRequest);\r\n        }\r\n\r\n        let success = API.CheckAPIResult(res);\r\n        if(success){\r\n            const {token, login_type} = res.data[\"datas\"];\r\n            User.saveTokenp(token);\r\n            User.saveLoginType(login_type);\r\n            Router.push(\"./index\");\r\n        }else{\r\n            showloginError(res[\"msg\"]);\r\n        }\r\n    }\r\n\r\n    const showloginError = (msg) =>{\r\n        SetloginFailMsg(msg);\r\n    };\r\n    const onFinsh =(loginRequest) =>{\r\n        const {loginType} = loginRequest;\r\n        login(loginRequest,loginType);\r\n    };\r\n    const onLoginTypeChange = e =>{\r\n        const selectedLoginType = e.target.value;\r\n        form.resetFields();\r\n        form.setFieldsValue({ loginType: selectedLoginType});\r\n        SetloginFailMsg();\r\n    };\r\n    return(\r\n        <React.Fragment>\r\n            <Form\r\n            name=\"login\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinsh}\r\n            form={form}\r\n            >\r\n            <StyleTitle>Education Online System</StyleTitle>\r\n            <Form.Item\r\n            name=\"loginType\"\r\n            initialValue=\"student\"\r\n            rules={[\r\n                {\r\n                    required:true,\r\n                    message:\"please choose a login type!\",\r\n                },\r\n            ]}\r\n            >\r\n            <Radio.Group onChange={onLoginTypeChange}>\r\n                <Radio.Button value={student}>Student</Radio.Button>\r\n                <Radio.Button value={teacher}>Teacher</Radio.Button>\r\n                <Radio.Button value={manager}>Manager</Radio.Button>\r\n            </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                    {required: true,\r\n                    message:\"Please input your email.\",\r\n                    },\r\n                ]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\" \r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required:true,\r\n                            message:\"Please input your password.\",\r\n                        },\r\n                    ]}\r\n                    >\r\n                        <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        />\r\n                </Form.Item>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <StyledButton type=\"primary\" htmlType=\"submit\">\r\n                        Login\r\n                    </StyledButton>\r\n                </Form.Item>\r\n            </Form>\r\n            {loginFailMsg &&(\r\n                <Alert\r\n                message=\"Login Failed\"\r\n                description={loginFaiMsg}\r\n                type=\"error\"\r\n                />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}