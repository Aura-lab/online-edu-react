{"ast":null,"code":"// menu urls are also used as key\nconst AppMenuKeys = {\n  homeSubMenu: \"home\",\n  dashBoard: \"/home\",\n  studentSubMenu: \"students\",\n  studentList: \"/students\",\n  editStudent: \"/students/editstudent\",\n  studentSelection: \"/students/selections\",\n  courseSubMenu: \"course\",\n  courseList: \"/course\",\n  editCourse: \"/course/editcourse\",\n  courseType: \"/course/coursetype\",\n  teacherSubMenu: \"manager\",\n  teacherList: \"/teacher\",\n  managerSubMenu: \"manager\",\n  managerList: \"/manager\",\n  roleSubMenu: \"role\",\n  roleList: \"/role\",\n  settingSubMenu: \"settings\",\n  settingPassword: \"/settings\"\n}; // -?-\n\nconst PermittedMenus = {\n  dashBoard: \"-dashboard\",\n  studentList: \"-student-list\",\n  studentEdit: \"-student-edit\",\n  studentSelection: \"-student-selection\",\n  courseList: \"-course-list\",\n  courseEdit: \"-course-edit\",\n  courseTypeList: \"-course-type-list\",\n  teacherList: \"-teacher-list\",\n  managerList: \"-manager-list\",\n  roleList: \"-role-list\",\n  password: \"-password\"\n};\nconst PermittedMenuMapToMenuKey = {\n  [PermittedMenus.dashBoard]: AppMenuKeys.dashBoard,\n  [PermittedMenus.studentList]: AppMenuKeys.studentList,\n  [PermittedMenus.studentSelection]: AppMenuKeys.studentSelection,\n  [PermittedMenus.courseList]: AppMenuKeys.courseList,\n  [PermittedMenus.courseEdit]: AppMenuKeys.courseEdit,\n  [PermittedMenus.courseTypeList]: AppMenuKeys.courseTypeList,\n  [PermittedMenus.teacherList]: AppMenuKeys.teacherList,\n  [PermittedMenus.managerList]: AppMenuKeys.managerList,\n  [PermittedMenus.roleList]: AppMenuKeys.roleList,\n  [PermittedMenus.password]: AppMenuKeys.settingPassword\n};\n\nconst getHomeMenus = () => {\n  return [PermittedMenus.dashBoard];\n};\n\nconst getStudentMenus = () => {\n  return [PermittedMenus.studentEdit, PermittedMenus.studentSelection, PermittedMenus.studentList];\n};\n\nconst getCourseMenus = () => {\n  return [PermittedMenus.courseEdit, PermittedMenus.courseList, PermittedMenus.courseTypeList];\n};\n\nconst getTeacherMenus = () => {\n  return [PermittedMenus.teacherList];\n};\n\nconst getManagerMenus = () => {\n  return [PermittedMenus.managerList];\n};\n\nconst getRoleMenus = () => {\n  return [PermittedMenus.roleList];\n};\n\nconst getSettingMenus = () => {\n  return [PermittedMenus.password];\n};\n\nconst getMenuByKey = key => {\n  let menus = [];\n\n  if (key === AppMenuKeys.homeSubMenu) {\n    menus = getHomeMenus();\n  } else if (key === AppMenuKeys.studentSubMenu) {\n    menus = getStudentMenus();\n  } else if (key === AppMenuKeys.courseSubMenu) {\n    menus = getCourseMenus();\n  } else if (key === AppMenuKeys.teacherSubMenu) {\n    menus = getTeacherMenus();\n  } else if (key === AppMenuKeys.managerSubMenu) {\n    menus = getManagerMenus();\n  } else if (key === AppMenuKeys.roleSubMenu) {\n    menus = getRoleMenus();\n  } else if (key === AppMenuKeys.settingSubMenu) {\n    menus = getSettingMenus();\n  }\n\n  return menus;\n};\n\nconst shouldSubMenuVisible = (subMenuKey, PermittedMenus) => {\n  let menus = getMenuByKey(subMenuKey);\n  let visible = menus.some(item => {\n    return permittedMenus.includes(item);\n  });\n  return visible;\n};\n\nconst convertPermittedMenuToMenuKeys = permittedMenus => {\n  let menus = [];\n  permittedMenus.forEach(item => {\n    const menu = PermittedMenuMapToMenuKey[item];\n    menus.push(menu);\n  });\n  return menus;\n};\n\nconst shouldMenItemVisible = (menuItemKey, permittedMenus) => {\n  let menus = convertPermittedMenuToMenuKeys(permittedMenus);\n  let visible = menus.includes(menuItemKey);\n  return visible;\n};\n\nexport { AppMenuKeys, PermittedMenus, PermittedMenuMapToMenuKey, shouldSubMenuVisible, shouldMenItemVisible };","map":{"version":3,"sources":["C:/Users/111/Desktop/E-edu/edu-sys/components/layout/appmenuconfig.js"],"names":["AppMenuKeys","homeSubMenu","dashBoard","studentSubMenu","studentList","editStudent","studentSelection","courseSubMenu","courseList","editCourse","courseType","teacherSubMenu","teacherList","managerSubMenu","managerList","roleSubMenu","roleList","settingSubMenu","settingPassword","PermittedMenus","studentEdit","courseEdit","courseTypeList","password","PermittedMenuMapToMenuKey","getHomeMenus","getStudentMenus","getCourseMenus","getTeacherMenus","getManagerMenus","getRoleMenus","getSettingMenus","getMenuByKey","key","menus","shouldSubMenuVisible","subMenuKey","visible","some","item","permittedMenus","includes","convertPermittedMenuToMenuKeys","forEach","menu","push","shouldMenItemVisible","menuItemKey"],"mappings":"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","sourcesContent":["// menu urls are also used as key\r\nconst AppMenuKeys = {\r\n    homeSubMenu:\"home\",\r\n    dashBoard:\"/home\",\r\n    studentSubMenu:\"students\",\r\n    studentList:\"/students\",\r\n    editStudent:\"/students/editstudent\",\r\n    studentSelection: \"/students/selections\",\r\n    courseSubMenu: \"course\",\r\n    courseList:\"/course\",\r\n    editCourse:\"/course/editcourse\",\r\n    courseType: \"/course/coursetype\",\r\n    teacherSubMenu:\"manager\",\r\n    teacherList:\"/teacher\",\r\n    managerSubMenu:\"manager\",\r\n    managerList:\"/manager\",\r\n    roleSubMenu:\"role\",\r\n    roleList:\"/role\",\r\n    settingSubMenu:\"settings\",\r\n    settingPassword:\"/settings\",\r\n};\r\n// -?-\r\nconst PermittedMenus = {\r\n    dashBoard:\"-dashboard\",\r\n    studentList:\"-student-list\",\r\n    studentEdit:\"-student-edit\",\r\n    studentSelection:\"-student-selection\",\r\n    courseList:\"-course-list\",\r\n    courseEdit:\"-course-edit\",\r\n    courseTypeList:\"-course-type-list\",\r\n    teacherList:\"-teacher-list\",\r\n    managerList:\"-manager-list\",\r\n    roleList:\"-role-list\",\r\n    password:\"-password\",\r\n};\r\n\r\nconst PermittedMenuMapToMenuKey = {\r\n    [PermittedMenus.dashBoard] : AppMenuKeys.dashBoard,\r\n    [PermittedMenus.studentList] : AppMenuKeys.studentList,\r\n    [PermittedMenus.studentSelection]: AppMenuKeys.studentSelection,\r\n    [PermittedMenus.courseList]: AppMenuKeys.courseList,\r\n    [PermittedMenus.courseEdit]: AppMenuKeys.courseEdit,\r\n    [PermittedMenus.courseTypeList]: AppMenuKeys.courseTypeList,\r\n    [PermittedMenus.teacherList]: AppMenuKeys.teacherList,\r\n    [PermittedMenus.managerList]: AppMenuKeys.managerList,\r\n    [PermittedMenus.roleList]:AppMenuKeys.roleList,\r\n    [PermittedMenus.password]:AppMenuKeys.settingPassword\r\n};\r\n const getHomeMenus = () =>{\r\n     return [PermittedMenus.dashBoard];\r\n };\r\n\r\n const getStudentMenus = () =>{\r\n     return [PermittedMenus.studentEdit, PermittedMenus.studentSelection, PermittedMenus.studentList];\r\n };\r\n\r\n const getCourseMenus = () =>{\r\n    return [PermittedMenus.courseEdit, PermittedMenus.courseList, PermittedMenus.courseTypeList];\r\n };\r\n\r\n const getTeacherMenus = () => {\r\n     return [PermittedMenus.teacherList];\r\n }\r\n\r\n const getManagerMenus = () =>{\r\n     return [PermittedMenus.managerList];\r\n }\r\n const getRoleMenus =() =>{\r\n     return [PermittedMenus.roleList];\r\n }\r\n const getSettingMenus =() =>{\r\n     return [PermittedMenus.password];\r\n };\r\n const getMenuByKey = (key) =>{\r\n     let menus = [];\r\n     if(key ===AppMenuKeys.homeSubMenu){\r\n         menus = getHomeMenus();\r\n     } else if (key === AppMenuKeys.studentSubMenu) {\r\n         menus = getStudentMenus();\r\n     } else if (key === AppMenuKeys.courseSubMenu) {\r\n         menus = getCourseMenus();\r\n     } else if (key === AppMenuKeys.teacherSubMenu){\r\n         menus = getTeacherMenus();\r\n     } else if (key === AppMenuKeys.managerSubMenu){\r\n         menus = getManagerMenus();\r\n     }else if (key === AppMenuKeys.roleSubMenu){\r\n         menus = getRoleMenus();\r\n     } else if(key === AppMenuKeys.settingSubMenu){\r\n         menus = getSettingMenus();\r\n     }\r\n     return menus;\r\n };\r\n\r\n const shouldSubMenuVisible = (subMenuKey, PermittedMenus) =>{\r\n     let menus = getMenuByKey(subMenuKey);\r\n     let visible = menus.some ((item) => {\r\n         return permittedMenus.includes(item);\r\n     });\r\n     return visible;\r\n };\r\n\r\n const convertPermittedMenuToMenuKeys = (permittedMenus) => {\r\n     let menus = [];\r\n     permittedMenus.forEach((item) => {\r\n         const menu = PermittedMenuMapToMenuKey[item];\r\n         menus.push(menu);\r\n     })\r\n     return menus;\r\n };\r\n\r\n const shouldMenItemVisible = (menuItemKey, permittedMenus) =>{\r\n     let menus = convertPermittedMenuToMenuKeys(permittedMenus);\r\n     let visible = menus.includes(menuItemKey);\r\n     return visible;\r\n };\r\n\r\n export { AppMenuKeys, PermittedMenus, PermittedMenuMapToMenuKey, shouldSubMenuVisible, shouldMenItemVisible};"]},"metadata":{},"sourceType":"module"}