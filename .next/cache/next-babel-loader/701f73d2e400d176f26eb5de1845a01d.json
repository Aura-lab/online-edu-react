{"ast":null,"code":"import Axios from \"./axios\";\nimport Logger from \"./logger\";\nimport Router from \"next/router\"; // not create\n\nimport Error from \"../models/error\";\n\nclass REST {\n  /**\r\n   * return an axios to get promise object\r\n   * \r\n   * {string} url for http get\r\n   * return axios get promise object \r\n   */\n  static async get(url) {\n    let res;\n    let error = new Error(); // axios.init? confuse\n\n    const axios = Axios.init();\n\n    try {\n      res = await axios.get(url);\n\n      if (res.data.code != 0) {\n        error.msg = res.data.message;\n        error.code = res.data.code;\n\n        if (res.data.code === 555) {\n          error.action = () => {\n            Router.push(\"/login\");\n          };\n        }\n\n        throw `Error occured with http get, error code: ${error.code} ,message: ${error.msg}`;\n      }\n\n      return res;\n    } catch (e) {\n      Logger.log(e);\n      error.action && error.action();\n      return error;\n    }\n  }\n\n  static async posy(url, req) {\n    let res;\n    let error = new Error();\n    const axios = Axios.init();\n\n    try {\n      res = await axios.post(url, req);\n\n      if (res.data.code != 0) {\n        error.msg = res.data.message;\n        error.code = res.data.code;\n\n        if (res.data.code === 555) {\n          error.action = () => {\n            Router.push(\"/login\");\n          };\n        }\n\n        throw `Eroor occured with http post. error code: ${error.code} ,message: ${(error, msg)}`;\n      }\n\n      return res;\n    } catch (e) {\n      Logger.log(e);\n      error.action && error.action();\n      return error;\n    }\n  }\n\n}\n\nexport default REST;","map":{"version":3,"sources":["C:/Users/111/Desktop/E-edu/edu-sys/lib/rest.js"],"names":["Axios","Logger","Router","Error","REST","get","url","res","error","axios","init","data","code","msg","message","action","push","e","log","posy","req","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAGA,MAAMC,IAAN,CAAW;AACP;;;;;;AAMA,eAAaC,GAAb,CAAiBC,GAAjB,EAAqB;AACjB,QAAIC,GAAJ;AACA,QAAIC,KAAK,GAAG,IAAIL,KAAJ,EAAZ,CAFiB,CAGjB;;AACA,UAAMM,KAAK,GAAET,KAAK,CAACU,IAAN,EAAb;;AACA,QAAI;AACAH,MAAAA,GAAG,GAAG,MAAME,KAAK,CAACJ,GAAN,CAAUC,GAAV,CAAZ;;AAEA,UAAIC,GAAG,CAACI,IAAJ,CAASC,IAAT,IAAgB,CAApB,EAAsB;AAClBJ,QAAAA,KAAK,CAACK,GAAN,GAAYN,GAAG,CAACI,IAAJ,CAASG,OAArB;AACAN,QAAAA,KAAK,CAACI,IAAN,GAAaL,GAAG,CAACI,IAAJ,CAASC,IAAtB;;AACA,YAAGL,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,GAArB,EAAyB;AACrBJ,UAAAA,KAAK,CAACO,MAAN,GAAe,MAAK;AAChBb,YAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ;AACH,WAFD;AAGH;;AACD,cAAO,4CAA2CR,KAAK,CAACI,IAAK,cAAaJ,KAAK,CAACK,GAAI,EAApF;AACH;;AACD,aAAON,GAAP;AACH,KAdD,CAcC,OAAOU,CAAP,EAAU;AACXhB,MAAAA,MAAM,CAACiB,GAAP,CAAWD,CAAX;AACAT,MAAAA,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,EAAhB;AACA,aAAOP,KAAP;AACC;AACJ;;AAED,eAAaW,IAAb,CAAkBb,GAAlB,EAAuBc,GAAvB,EAA2B;AACvB,QAAIb,GAAJ;AACA,QAAIC,KAAK,GAAG,IAAIL,KAAJ,EAAZ;AACA,UAAMM,KAAK,GAAGT,KAAK,CAACU,IAAN,EAAd;;AACA,QAAG;AACCH,MAAAA,GAAG,GAAG,MAAME,KAAK,CAACY,IAAN,CAAWf,GAAX,EAAec,GAAf,CAAZ;;AACI,UAAGb,GAAG,CAACI,IAAJ,CAASC,IAAT,IAAgB,CAAnB,EAAqB;AACjBJ,QAAAA,KAAK,CAACK,GAAN,GAAYN,GAAG,CAACI,IAAJ,CAASG,OAArB;AACAN,QAAAA,KAAK,CAACI,IAAN,GAAaL,GAAG,CAACI,IAAJ,CAASC,IAAtB;;AACA,YAAGL,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAiB,GAApB,EAAwB;AACpBJ,UAAAA,KAAK,CAACO,MAAN,GAAe,MAAK;AAChBb,YAAAA,MAAM,CAACc,IAAP,CAAY,QAAZ;AACH,WAFD;AAGH;;AACD,cAAO,6CAA4CR,KAAK,CAACI,IAAK,cAAxD,CAAqEJ,KAAK,EAACK,GAA3E,CAA+E,EAArF;AACC;;AACD,aAAON,GAAP;AACX,KAbD,CAaC,OAAOU,CAAP,EAAU;AACPhB,MAAAA,MAAM,CAACiB,GAAP,CAAWD,CAAX;AACAT,MAAAA,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,EAAhB;AACA,aAAOP,KAAP;AACH;AACJ;;AAvDM;;AA0DX,eAAeJ,IAAf","sourcesContent":["import Axios from \"./axios\";\r\nimport Logger from \"./logger\";\r\nimport Router from \"next/router\";\r\n// not create\r\nimport Error from \"../models/error\"\r\n\r\n\r\nclass REST {\r\n    /**\r\n     * return an axios to get promise object\r\n     * \r\n     * {string} url for http get\r\n     * return axios get promise object \r\n     */\r\n    static async get(url){\r\n        let res;\r\n        let error = new Error();\r\n        // axios.init? confuse\r\n        const axios =Axios.init();\r\n        try {\r\n            res = await axios.get(url);\r\n\r\n            if (res.data.code !=0){\r\n                error.msg = res.data.message;\r\n                error.code = res.data.code\r\n                if(res.data.code === 555){\r\n                    error.action = () =>{\r\n                        Router.push(\"/login\");\r\n                    };\r\n                }\r\n                throw `Error occured with http get, error code: ${error.code} ,message: ${error.msg}`;\r\n            }\r\n            return res;\r\n        }catch (e) {\r\n        Logger.log(e);\r\n        error.action && error.action();\r\n        return error;\r\n        }\r\n    }\r\n\r\n    static async posy(url, req){\r\n        let res;\r\n        let error = new Error();\r\n        const axios = Axios.init();\r\n        try{\r\n            res = await axios.post(url,req);\r\n                if(res.data.code !=0){\r\n                    error.msg = res.data.message;\r\n                    error.code = res.data.code;\r\n                    if(res.data.code ===555){\r\n                        error.action = () =>{\r\n                            Router.push(\"/login\");\r\n                        };\r\n                    }\r\n                    throw `Eroor occured with http post. error code: ${error.code} ,message: ${error,msg}`;\r\n                    }\r\n                    return res;\r\n        }catch (e) {\r\n            Logger.log(e);\r\n            error.action && error.action();\r\n            return error;\r\n        }\r\n    }\r\n\r\n}\r\nexport default REST;"]},"metadata":{},"sourceType":"module"}