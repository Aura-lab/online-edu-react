{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\111\\\\Desktop\\\\E-edu\\\\edu-sys\\\\components\\\\layout\\\\appmenuitem.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Menu } from \"antd\";\nimport User from \"../../lib/user\";\nimport { shouldSubMenuVisible, shouldMenItemVisible } from \"./appmenuconfig\";\nimport LoginTypes from \"../types/logintypes\";\nconst {\n  SubMenu\n} = Menu;\n\nfunction AppSubmenu(props) {\n  _s();\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n\n  const {\n    owners\n  } = props,\n        rest = _objectWithoutProperties(props, [\"owners\"]);\n\n  const key = props.evnetKey;\n  useEffect(() => {\n    const loginType = User.getLoginType();\n    let dynamicVisible = false;\n\n    if (loginType === LoginTypes.manager) {\n      const permittedMenus = User.getPermittedMenus();\n      dynamicVisible = shouldSubMenuVisible(key, permittedMenus);\n    }\n\n    const predefinedVisible = owners && owners.includes(loginType);\n    setVisible(dynamicVisible || predefinedVisible);\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, visible && __jsx(SubMenu, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 40\n    }\n  })));\n}\n\n_s(AppSubmenu, \"cz/DzCD06IMMsoBJ0A1IgCy1P5M=\");\n\n_c = AppSubmenu;\nexport { AppSubmenu };\n\nfunction AppMenuItem(props) {\n  _s2();\n\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n\n  const {\n    owners\n  } = props,\n        rest = _objectWithoutProperties(props, [\"owners\"]);\n\n  const key = props.evnetKey;\n  useEffect(() => {\n    const loginType = User.getLoginType();\n    let dynamicVisible = false;\n\n    if (loginType === LoginTypes.manager) {\n      const permittedMenus = User.getPermittedMenus();\n      dynamicVisible = shouldSubMenuVisible(key, permittedMenus);\n    }\n\n    const predefinedVisible = owners && owners.include(loginType);\n    setVisible(dynamicVisible || predefinedVisible);\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }, visible && __jsx(Menu.Item, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 36\n    }\n  })));\n}\n\n_s2(AppMenuItem, \"cz/DzCD06IMMsoBJ0A1IgCy1P5M=\");\n\n_c2 = AppMenuItem;\nexport { AppMenuItem };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppSubmenu\");\n$RefreshReg$(_c2, \"AppMenuItem\");","map":{"version":3,"sources":["C:/Users/111/Desktop/E-edu/edu-sys/components/layout/appmenuitem.js"],"names":["React","useState","useEffect","Menu","User","shouldSubMenuVisible","shouldMenItemVisible","LoginTypes","SubMenu","AppSubmenu","props","visible","setVisible","owners","rest","key","evnetKey","loginType","getLoginType","dynamicVisible","manager","permittedMenus","getPermittedMenus","predefinedVisible","includes","AppMenuItem","include"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,iBAA3D;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,MAAM;AAACC,EAAAA;AAAD,IAAYL,IAAlB;;AAEA,SAASM,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACtB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAsBH,KAA5B;AAAA,QAAmBI,IAAnB,4BAA4BJ,KAA5B;;AACA,QAAMK,GAAG,GAAGL,KAAK,CAACM,QAAlB;AACAd,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMe,SAAS,GAAGb,IAAI,CAACc,YAAL,EAAlB;AACA,QAAIC,cAAc,GAAG,KAArB;;AACA,QAAIF,SAAS,KAAKV,UAAU,CAACa,OAA7B,EAAsC;AAClC,YAAMC,cAAc,GAAGjB,IAAI,CAACkB,iBAAL,EAAvB;AACAH,MAAAA,cAAc,GAAGd,oBAAoB,CAACU,GAAD,EAAMM,cAAN,CAArC;AACH;;AACD,UAAME,iBAAiB,GAAGV,MAAM,IAAIA,MAAM,CAACW,QAAP,CAAgBP,SAAhB,CAApC;AACAL,IAAAA,UAAU,CAACO,cAAc,IAAII,iBAAnB,CAAV;AACH,GATQ,EASN,EATM,CAAT;AAWA,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBZ,OAAO,IAAI,MAAC,OAAD,eAAaG,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5B,CAAP;AACH;;GAhBQL,U;;KAAAA,U;AAkBT,SAASA,UAAT;;AACA,SAASgB,WAAT,CAAqBf,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAM;AAACY,IAAAA;AAAD,MAAoBH,KAA1B;AAAA,QAAkBI,IAAlB,4BAA0BJ,KAA1B;;AACA,QAAMK,GAAG,GAAGL,KAAK,CAACM,QAAlB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,SAAS,GAAGb,IAAI,CAACc,YAAL,EAAlB;AACA,QAAIC,cAAc,GAAG,KAArB;;AACA,QAAGF,SAAS,KAAKV,UAAU,CAACa,OAA5B,EAAoC;AAChC,YAAMC,cAAc,GAAGjB,IAAI,CAACkB,iBAAL,EAAvB;AACAH,MAAAA,cAAc,GAAGd,oBAAoB,CAACU,GAAD,EAAMM,cAAN,CAArC;AACH;;AACD,UAAME,iBAAiB,GAAGV,MAAM,IAAIA,MAAM,CAACa,OAAP,CAAeT,SAAf,CAApC;AACAL,IAAAA,UAAU,CAACO,cAAc,IAAII,iBAAnB,CAAV;AACH,GATQ,EASN,EATM,CAAT;AAWJ,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBZ,OAAO,IAAI,MAAC,IAAD,CAAM,IAAN,eAAeG,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5B,CAAP;AACC;;IAhBQW,W;;MAAAA,W;AAiBT,SAAQA,WAAR","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Menu} from \"antd\";\r\nimport User from \"../../lib/user\";\r\nimport { shouldSubMenuVisible, shouldMenItemVisible } from \"./appmenuconfig\";\r\nimport LoginTypes from \"../types/logintypes\";\r\nconst {SubMenu} = Menu;\r\n\r\nfunction AppSubmenu(props){\r\n    const [visible, setVisible] = useState(false);\r\n    const { owners, ...rest } = props;\r\n    const key = props.evnetKey;\r\n    useEffect(() =>{\r\n        const loginType = User.getLoginType();\r\n        let dynamicVisible = false;\r\n        if (loginType === LoginTypes.manager) {\r\n            const permittedMenus = User.getPermittedMenus();\r\n            dynamicVisible = shouldSubMenuVisible(key, permittedMenus);\r\n        }\r\n        const predefinedVisible = owners && owners.includes(loginType);\r\n        setVisible(dynamicVisible || predefinedVisible);\r\n    }, []);\r\n\r\n    return <React.Fragment>{visible && <SubMenu {...rest} />}</React.Fragment>;\r\n}\r\n\r\nexport { AppSubmenu};\r\nfunction AppMenuItem(props) {\r\n    const [visible, setVisible] = useState(false);\r\n    const {owners, ...rest } =props;\r\n    const key = props.evnetKey;\r\n    useEffect(() => {\r\n        const loginType = User.getLoginType();\r\n        let dynamicVisible = false;\r\n        if(loginType === LoginTypes.manager){\r\n            const permittedMenus = User.getPermittedMenus();\r\n            dynamicVisible = shouldSubMenuVisible(key, permittedMenus);\r\n        }\r\n        const predefinedVisible = owners && owners.include(loginType);\r\n        setVisible(dynamicVisible || predefinedVisible);\r\n    }, []);\r\n\r\nreturn <React.Fragment>{visible && <Menu.Item {...rest}/>}</React.Fragment>;\r\n}\r\nexport {AppMenuItem};\r\n"]},"metadata":{},"sourceType":"module"}